apply plugin: 'com.android.application'

android {
    compileSdkVersion 'android-R'

    defaultConfig {
        applicationId "com.osfans.trime"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 20200613
        versionName '1.0.2'
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_TOOLCHAIN=clang", "DANDROID_STL=c++_shared", "-DANDROID_STL_FORCE_FEATURES=ON"
            }
        }
    }

    signingConfigs {
       release {
       }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
//            signingConfig signingConfigs.release
        }
    }

    def propsFile = rootProject.file('gradle.properties') //store release config in gradle.properties
    def configName = 'release'

    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props!=null && props.containsKey('storeFile')) {
            android.signingConfigs[configName].storeFile = rootProject.file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
            version "3.10.2"
        }
    }
    ndkVersion "21.0.6113669"
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '29.0.3'
}

dependencies {
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.5.Final'
}
